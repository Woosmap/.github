name: Smoke Test

on:
  workflow_call:
    inputs:
      env:
        description: 'Env the command was ran'
        required: true
        default: 'develop'
        type: string
      tag:
        description: 'Tag to run smoke tests for'
        required: true
        default: 'Error'
        type: string
      pr:
        description: 'Pr which set off this run'
        required: true
        default: 'Error'
        type: string
      success:
        description: 'If the deploy was successful'
        required: true
        default: '1'
        type: string
      pr_deploy:
        description: 'If running a smoke-test on a PR set to true'
        required: false
        default: 'false'
        type: string
    secrets:
      helper_token:
        required: true
      slack_token:
        required: true

jobs:
  check_actions:
    runs-on: ubuntu-24.04
    name: Smoke Test After Deploy
    env:
      TERM: xterm-256color
      FORCE_COLOR: 2
      DOCKER_BUILDKIT: 1
    steps:
      - name: Getting Build-Helper Tag
        run: |
          echo "HELPER_VERSION=$(git ls-remote --tags --sort="v:refname" https://${{secrets.helper_token}}@github.com/Woosmap/build-helper.git v8.\* | awk '{print $2}' | tail -n 1)" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: Woosmap/build-helper
          ref: ${{ env.HELPER_VERSION }}
          token: ${{ secrets.helper_token }}
          path: helper
          fetch-depth: 1
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
#      - name: Smoke Test
#        uses: ./helper/.github/actions/run_smoke_tests
#        with:
#          pr_deploy: ${{ inputs.pr_deploy }}
#          slack_token: ${{ secrets.slack_token }}

      - name: Install Zoidberg
        run: |
          # Add Gemfury repository
          echo "deb [trusted=yes] https://Pfii9sZDGkGXEhXEmStx@apt.fury.io/webgeoservices/ /" | sudo tee /etc/apt/sources.list.d/gemfury.list
          
          # Update package list
          sudo apt-get update
          
          # Install Zoidberg deb package
          sudo apt-get install -y zoidberg

      - name: Run zoidberg non regression tests
        run: |
          output=$(zoidberg -d ./zoidberg_tests distance)
          echo "Script Output: $output"
          if [[ $output != "OK" ]]; then
            echo "Non regression tests FAILED"
            exit 1
          fi
