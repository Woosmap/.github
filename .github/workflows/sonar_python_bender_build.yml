name: Build - Python Docker based Service and run Sonar Checks.

on:
  workflow_call:
    inputs:
      install:
        default: ''
        required: false
        type: string
      download_merchant_ml:
        default: false
        required: false
        type: boolean
    secrets:
      helper_token:
        required: true
      sonar_token:
        required: true
      cache_aws_key_id:
        required: true
      cache_aws_key:
        required: true
      aws_key_id:
        required: true
      aws_key:
        required: true
      aws_account:
        required: true
      slack_token:
        required: true
      leela_token:
        required: true
      prod_leela_token:
        required: true
      maxmind:
        required: false
      dockerhub_ro_token:
        required: false

jobs:
  test_actions:
    if: |
      (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    runs-on: ubuntu-24.04
    name: Build, Test, Sonar, Publish
    env:
      is_reco: ${{ secrets.maxmind }}
      docker_password: ${{ secrets.dockerhub_ro_token }}
      TERM: xterm-256color
      FORCE_COLOR: 2
      DOCKER_BUILDKIT: 1
    steps:
      - name: Login to Docker Hub
        if: ${{ env.docker_password }}
        uses: docker/login-action@v3
        with:
          username: "woosmap"
          password: ${{ secrets.dockerhub_ro_token }}
      - name: Getting Build-Helper Tag
        run: |
          echo "HELPER_VERSION=$(git ls-remote --tags --sort="v:refname" https://${{secrets.helper_token}}@github.com/Woosmap/build-helper.git v8.\* | awk '{print $2}' | tail -n 1)" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          repository: Woosmap/build-helper
          ref: dev/zoidberg_smoke_tests
          token: ${{ secrets.helper_token }}
          path: helper
          fetch-depth: 1
      - name: Login to AWS ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.aws_account }}.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.aws_key_id }}
          password: ${{ secrets.aws_key }}
      - name: Install Bender
        run: |
          pip install --break-system-packages --extra-index-url https://pypi.fury.io/Pfii9sZDGkGXEhXEmStx/webgeoservices/ "bender==2.2.*"
      - name: Install Required Packages
        if: ${{ inputs.install }} != ''
        run: |
          sudo apt install --no-install-recommends --yes ${{ inputs.install }}
      - name: Download GeoIP (maxmind) DB (for woosmapreco)
        if: ${{ env.is_reco }}
        run: |
          ./download_geoip_database.sh
        env:
          MAXMIND: ${{ secrets.maxmind }}
      - name: Bender Build
        uses: ./helper/.github/actions/builder
      - name: Bender Test
        uses: ./helper/.github/actions/run_tests
      - name: Cache code coverage
        uses: ./helper/.github/actions/cache
        with:
          path: './coverage/coverage.xml'
          key: 'coverage'
          cache_aws_key_id: ${{ secrets.cache_aws_key_id }}
          cache_aws_key: ${{ secrets.cache_aws_key }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.helper_token }}
          SONAR_TOKEN: ${{ secrets.sonar_token}}
      - name: Publish
        uses: ./helper/.github/actions/publish
        with:
          leela_token: ${{ secrets.leela_token }}
      - name: PR Deploy
        uses: ./helper/.github/actions/deploy
        with:
          pr_deploy: 'true'
          leela_token: ${{ secrets.leela_token }}
